plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'

    // DGS代码生成器
    id "com.netflix.dgs.codegen" version "6.1.2"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

// DGS
dependencyManagement {
    imports {
        mavenBom("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:8.0.0")
    }
}

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    /* DGS */
    implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter"
    // DGS 测试
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // DGS 分页
    implementation 'com.netflix.graphql.dgs:graphql-dgs-pagination:8.2.2'
    /* druid 数据库连接池 */
    implementation 'com.alibaba:druid-spring-boot-starter:1.2.21'
    /* Mybits plus */
    implementation 'com.baomidou:mybatis-plus-boot-starter:3.5.5'
    // mybatis plus中的mybatis依赖版本过低, 不适配spring boot 3.X, 故手动引入新版本
    implementation 'org.mybatis:mybatis-spring:3.0.3'
    // Sa-Token认证
    implementation 'cn.dev33:sa-token-spring-boot3-starter:1.37.0'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

generateJava{
    schemaPaths = ["${projectDir}/src/main/resources/schema"] // List of directories containing schema files
    packageName = 'com.uno_restart.generated' // The package name to use to generate sources
    generateClient = true // Enable generating the type safe query API
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    useJUnitPlatform()
}