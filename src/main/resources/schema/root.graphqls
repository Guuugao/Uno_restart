# 查询
type Query {
    # 查询自己
    me: PlayerInfo!
    # 通过玩家名称查询用户, 未指定名称代表查询自己, 可以返回空
    queryPlayerByName(playerName: String!, first: Int = 10, after: String) : PlayerConnection!
    # 根据房间名称查找指定游戏房间, 可以返回空
    queryRoomByName(roomName: String!, first: Int = 10, after: String) : RoomConnection!
    # 根据房间id查找指定游戏房间, 可以返回空
    queryRoomByID(roomID: ID!): RoomInfo
    # 获取公开房间列表
    availableRooms(first: Int = 10, after: String) : RoomConnection!
    # 查询当前加入的房间
    currentJoinedRoom: RoomFeedback!
}

# 变更
type Mutation {
    # 用户登录相关
    playerLogout: PlayerInfoFeedback!
    playerLogin(playerName: String!, password: String!) : PlayerInfoFeedback!
    playerRegister(playerName: String!, password: String!) : PlayerInfoFeedback!

    # 用户信息操作相关
    playerPasswordModify(oldPassword: String!, newPassword: String!) : PlayerInfoFeedback!
    playerNameModify(newPlayerName: String!) : PlayerInfoFeedback!
    playerAvatarModify(avatar: Upload!) : PlayerAvatarFeedback!
    playerContactModify(email: String, phone: String) : PlayerInfoFeedback!

    # 游戏房间相关
    roomCreate(roomName: String!, maxPlayerCount: Int = 4, isPrivate: Boolean = false, password: String) : RoomFeedback!
    roomJoin(roomID: ID!, password: String) : RoomFeedback!
    roomQuit : RoomFeedback!
    roomPlayerReady(roomID: ID!) : RoomFeedback!
    roomPlayerUnready(roomID: ID!) : RoomFeedback!

    # 游玩内容
    gameSendCard(roomID: ID!, card: GameCardInput!): Boolean
}

# 订阅
# !!! 无法使用http头获取用户信息, 需要手动传递token !!!
type Subscription {
    roomWaitStart(roomID: ID!, token: ID!) : GameSettings
    gameWaitNextReaction(roomID: ID!, token: ID!) : GameTurnsFeedback
}